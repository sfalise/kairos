"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var tree_node_component_1 = require('./tree-node.component');
var tree_model_1 = require('../models/tree.model');
var tree_options_model_1 = require('../models/tree-options.model');
var keys_1 = require('../constants/keys');
var _ = require('lodash');
var TreeComponent = (function () {
    function TreeComponent(treeModel) {
        var _this = this;
        this.treeModel = treeModel;
        treeModel.eventNames.forEach(function (name) { return _this[name] = new core_1.EventEmitter(); });
    }
    Object.defineProperty(TreeComponent.prototype, "nodes", {
        // Will be handled in ngOnChanges
        set: function (nodes) { },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(TreeComponent.prototype, "options", {
        set: function (options) { },
        enumerable: true,
        configurable: true
    });
    ;
    Object.defineProperty(TreeComponent.prototype, "focused", {
        set: function (value) {
            this.treeModel.setFocus(value);
        },
        enumerable: true,
        configurable: true
    });
    TreeComponent.prototype.onKeydown = function ($event) {
        var focusedNode = this.treeModel.focusedNode;
        if (!this.treeModel.isFocused)
            return;
        if (_.includes([keys_1.KEYS.DOWN, keys_1.KEYS.UP, keys_1.KEYS.LEFT,
            keys_1.KEYS.RIGHT, keys_1.KEYS.ENTER, keys_1.KEYS.SPACE], $event.keyCode)) {
            $event.preventDefault();
        }
        switch ($event.keyCode) {
            case keys_1.KEYS.DOWN:
                return this.treeModel.focusNextNode();
            case keys_1.KEYS.UP:
                return this.treeModel.focusPreviousNode();
            case keys_1.KEYS.LEFT:
                return this.treeModel.focusDrillUp();
            case keys_1.KEYS.RIGHT:
                return this.treeModel.focusDrillDown();
            case keys_1.KEYS.ENTER:
            case keys_1.KEYS.SPACE:
                return focusedNode && focusedNode.toggleActivated();
        }
    };
    TreeComponent.prototype.onMousedown = function ($event) {
        var insideClick = $event.target.closest('Tree');
        if (!insideClick) {
            this.treeModel.setFocus(false);
        }
    };
    TreeComponent.prototype.ngOnChanges = function (changes) {
        this.treeModel.setData({
            options: changes.options && changes.options.currentValue,
            nodes: changes.nodes && changes.nodes.currentValue,
            events: _.pick(this, this.treeModel.eventNames)
        });
    };
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Array), 
        __metadata('design:paramtypes', [Array])
    ], TreeComponent.prototype, "nodes", null);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', tree_options_model_1.TreeOptions), 
        __metadata('design:paramtypes', [tree_options_model_1.TreeOptions])
    ], TreeComponent.prototype, "options", null);
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Boolean), 
        __metadata('design:paramtypes', [Boolean])
    ], TreeComponent.prototype, "focused", null);
    __decorate([
        core_1.Output(), 
        __metadata('design:type', Object)
    ], TreeComponent.prototype, "onToggle", void 0);
    __decorate([
        core_1.Output(), 
        __metadata('design:type', Object)
    ], TreeComponent.prototype, "onActiveChanged", void 0);
    __decorate([
        core_1.Output(), 
        __metadata('design:type', Object)
    ], TreeComponent.prototype, "onActivate", void 0);
    __decorate([
        core_1.Output(), 
        __metadata('design:type', Object)
    ], TreeComponent.prototype, "onDeactivate", void 0);
    __decorate([
        core_1.Output(), 
        __metadata('design:type', Object)
    ], TreeComponent.prototype, "onFocus", void 0);
    __decorate([
        core_1.Output(), 
        __metadata('design:type', Object)
    ], TreeComponent.prototype, "onBlur", void 0);
    __decorate([
        core_1.Output(), 
        __metadata('design:type', Object)
    ], TreeComponent.prototype, "onDoubleClick", void 0);
    __decorate([
        core_1.Output(), 
        __metadata('design:type', Object)
    ], TreeComponent.prototype, "onContextMenu", void 0);
    __decorate([
        core_1.Output(), 
        __metadata('design:type', Object)
    ], TreeComponent.prototype, "onInitialized", void 0);
    TreeComponent = __decorate([
        core_1.Component({
            selector: 'Tree',
            directives: [tree_node_component_1.TreeNodeComponent],
            host: {
                '(body: keydown)': "onKeydown($event)",
                '(body: mousedown)': "onMousedown($event)"
            },
            providers: [tree_model_1.TreeModel],
            styles: [
                '.tree-children { padding-left: 20px }',
                ".tree {\n      display: inline-block;\n      cursor: pointer;\n      -webkit-touch-callout: none; /* iOS Safari */\n      -webkit-user-select: none;   /* Chrome/Safari/Opera */\n      -khtml-user-select: none;    /* Konqueror */\n      -moz-user-select: none;      /* Firefox */\n      -ms-user-select: none;       /* IE/Edge */\n      user-select: none;           /* non-prefixed version, currently not supported by any browser */\n    }"
            ],
            template: "\n    <div class=\"tree\">\n      <TreeNode\n        (click)=\"treeModel.setFocus(true)\"\n        *ngFor=\"let node of treeModel.roots\"\n        [node]=\"node\">\n      </TreeNode>\n    </div>\n  "
        }), 
        __metadata('design:paramtypes', [tree_model_1.TreeModel])
    ], TreeComponent);
    return TreeComponent;
}());
exports.TreeComponent = TreeComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9saWIvY29tcG9uZW50cy90cmVlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEscUJBQWdGLGVBQWUsQ0FBQyxDQUFBO0FBQ2hHLG9DQUFrQyx1QkFBdUIsQ0FBQyxDQUFBO0FBQzFELDJCQUEwQixzQkFBc0IsQ0FBQyxDQUFBO0FBRWpELG1DQUE0Qiw4QkFBOEIsQ0FBQyxDQUFBO0FBQzNELHFCQUFxQixtQkFBbUIsQ0FBQyxDQUFBO0FBRXpDLElBQVksQ0FBQyxXQUFNLFFBRW5CLENBQUMsQ0FGMEI7QUFpQzNCO0lBQ0UsdUJBQW1CLFNBQW1CO1FBRHhDLGlCQWdFQztRQS9Eb0IsY0FBUyxHQUFULFNBQVMsQ0FBVTtRQUNwQyxTQUFTLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxVQUFDLElBQUksSUFBSyxPQUFBLEtBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLG1CQUFZLEVBQUUsRUFBL0IsQ0FBK0IsQ0FBQyxDQUFDO0lBQzFFLENBQUM7SUFHUSxzQkFBSSxnQ0FBSztRQURsQixpQ0FBaUM7YUFDeEIsVUFBVSxLQUFXLElBQUksQ0FBQzs7O09BQUE7O0lBQzFCLHNCQUFJLGtDQUFPO2FBQVgsVUFBWSxPQUFtQixJQUFJLENBQUM7OztPQUFBOztJQUVwQyxzQkFBSSxrQ0FBTzthQUFYLFVBQVksS0FBYTtZQUNoQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNqQyxDQUFDOzs7T0FBQTtJQVlELGlDQUFTLEdBQVQsVUFBVSxNQUFNO1FBQ2QsSUFBSSxXQUFXLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUM7UUFDN0MsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQztZQUFDLE1BQU0sQ0FBQztRQUN0QyxFQUFFLENB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LENBQUM7O3FCQUFBO0lBaUVGLG9CQUFDO0FBQUQsQ0FBQyxBQWhFRCxJQWdFQztBQWhFWSxxQkFBYSxnQkFnRXpCLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlLCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRyZWVOb2RlQ29tcG9uZW50IH0gZnJvbSAnLi90cmVlLW5vZGUuY29tcG9uZW50JztcbmltcG9ydCB7IFRyZWVNb2RlbCB9IGZyb20gJy4uL21vZGVscy90cmVlLm1vZGVsJztcbmltcG9ydCB7IFRyZWVOb2RlIH0gZnJvbSAnLi4vbW9kZWxzL3RyZWUtbm9kZS5tb2RlbCc7XG5pbXBvcnQgeyBUcmVlT3B0aW9ucyB9IGZyb20gJy4uL21vZGVscy90cmVlLW9wdGlvbnMubW9kZWwnO1xuaW1wb3J0IHsgS0VZUyB9IGZyb20gJy4uL2NvbnN0YW50cy9rZXlzJztcblxuaW1wb3J0ICogYXMgXyBmcm9tICdsb2Rhc2gnXG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ1RyZWUnLFxuICBkaXJlY3RpdmVzOiBbVHJlZU5vZGVDb21wb25lbnRdLFxuICBob3N0OiB7XG4gICAgJyhib2R5OiBrZXlkb3duKSc6IFwib25LZXlkb3duKCRldmVudClcIixcbiAgICAnKGJvZHk6IG1vdXNlZG93biknOiBcIm9uTW91c2Vkb3duKCRldmVudClcIlxuICB9LFxuICBwcm92aWRlcnM6IFtUcmVlTW9kZWxdLFxuICBzdHlsZXM6IFtcbiAgICAnLnRyZWUtY2hpbGRyZW4geyBwYWRkaW5nLWxlZnQ6IDIwcHggfScsXG4gICAgYC50cmVlIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIC13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTsgLyogaU9TIFNhZmFyaSAqL1xuICAgICAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTsgICAvKiBDaHJvbWUvU2FmYXJpL09wZXJhICovXG4gICAgICAta2h0bWwtdXNlci1zZWxlY3Q6IG5vbmU7ICAgIC8qIEtvbnF1ZXJvciAqL1xuICAgICAgLW1vei11c2VyLXNlbGVjdDogbm9uZTsgICAgICAvKiBGaXJlZm94ICovXG4gICAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7ICAgICAgIC8qIElFL0VkZ2UgKi9cbiAgICAgIHVzZXItc2VsZWN0OiBub25lOyAgICAgICAgICAgLyogbm9uLXByZWZpeGVkIHZlcnNpb24sIGN1cnJlbnRseSBub3Qgc3VwcG9ydGVkIGJ5IGFueSBicm93c2VyICovXG4gICAgfWBcbiAgXSxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwidHJlZVwiPlxuICAgICAgPFRyZWVOb2RlXG4gICAgICAgIChjbGljayk9XCJ0cmVlTW9kZWwuc2V0Rm9jdXModHJ1ZSlcIlxuICAgICAgICAqbmdGb3I9XCJsZXQgbm9kZSBvZiB0cmVlTW9kZWwucm9vdHNcIlxuICAgICAgICBbbm9kZV09XCJub2RlXCI+XG4gICAgICA8L1RyZWVOb2RlPlxuICAgIDwvZGl2PlxuICBgXG59KVxuZXhwb3J0IGNsYXNzIFRyZWVDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgdHJlZU1vZGVsOlRyZWVNb2RlbCkge1xuICAgIHRyZWVNb2RlbC5ldmVudE5hbWVzLmZvckVhY2goKG5hbWUpID0+IHRoaXNbbmFtZV0gPSBuZXcgRXZlbnRFbWl0dGVyKCkpO1xuICB9XG5cbiAgLy8gV2lsbCBiZSBoYW5kbGVkIGluIG5nT25DaGFuZ2VzXG4gIEBJbnB1dCgpIHNldCBub2Rlcyhub2RlczphbnlbXSkgeyB9O1xuICBASW5wdXQoKSBzZXQgb3B0aW9ucyhvcHRpb25zOlRyZWVPcHRpb25zKSB7IH07XG5cbiAgQElucHV0KCkgc2V0IGZvY3VzZWQodmFsdWU6Ym9vbGVhbikge1xuICAgIHRoaXMudHJlZU1vZGVsLnNldEZvY3VzKHZhbHVlKTtcbiAgfVxuXG4gIEBPdXRwdXQoKSBvblRvZ2dsZTtcbiAgQE91dHB1dCgpIG9uQWN0aXZlQ2hhbmdlZDtcbiAgQE91dHB1dCgpIG9uQWN0aXZhdGU7XG4gIEBPdXRwdXQoKSBvbkRlYWN0aXZhdGU7XG4gIEBPdXRwdXQoKSBvbkZvY3VzO1xuICBAT3V0cHV0KCkgb25CbHVyO1xuICBAT3V0cHV0KCkgb25Eb3VibGVDbGljaztcbiAgQE91dHB1dCgpIG9uQ29udGV4dE1lbnU7XG4gIEBPdXRwdXQoKSBvbkluaXRpYWxpemVkO1xuXG4gIG9uS2V5ZG93bigkZXZlbnQpIHtcbiAgICBsZXQgZm9jdXNlZE5vZGUgPSB0aGlzLnRyZWVNb2RlbC5mb2N1c2VkTm9kZTtcbiAgICBpZiAoIXRoaXMudHJlZU1vZGVsLmlzRm9jdXNlZCkgcmV0dXJuO1xuICAgIGlmIChfLmluY2x1ZGVzKFtLRVlTLkRPV04sIEtFWVMuVVAsIEtFWVMuTEVGVCxcbiAgICAgIEtFWVMuUklHSFQsIEtFWVMuRU5URVIsIEtFWVMuU1BBQ0VdLCAkZXZlbnQua2V5Q29kZSkpIHtcbiAgICAgICRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cblxuICAgIHN3aXRjaCAoJGV2ZW50LmtleUNvZGUpIHtcbiAgICAgIGNhc2UgS0VZUy5ET1dOOlxuICAgICAgICByZXR1cm4gdGhpcy50cmVlTW9kZWwuZm9jdXNOZXh0Tm9kZSgpO1xuXG4gICAgICBjYXNlIEtFWVMuVVA6XG4gICAgICAgIHJldHVybiB0aGlzLnRyZWVNb2RlbC5mb2N1c1ByZXZpb3VzTm9kZSgpO1xuXG4gICAgICBjYXNlIEtFWVMuTEVGVDpcbiAgICAgICAgcmV0dXJuIHRoaXMudHJlZU1vZGVsLmZvY3VzRHJpbGxVcCgpO1xuXG4gICAgICBjYXNlIEtFWVMuUklHSFQ6XG4gICAgICAgIHJldHVybiB0aGlzLnRyZWVNb2RlbC5mb2N1c0RyaWxsRG93bigpO1xuXG4gICAgICBjYXNlIEtFWVMuRU5URVI6XG4gICAgICBjYXNlIEtFWVMuU1BBQ0U6XG4gICAgICAgIHJldHVybiBmb2N1c2VkTm9kZSAmJiBmb2N1c2VkTm9kZS50b2dnbGVBY3RpdmF0ZWQoKTtcbiAgICB9XG4gIH1cblxuICBvbk1vdXNlZG93bigkZXZlbnQpIHtcbiAgICBsZXQgaW5zaWRlQ2xpY2sgPSAkZXZlbnQudGFyZ2V0LmNsb3Nlc3QoJ1RyZWUnKTtcbiAgICBpZiAoIWluc2lkZUNsaWNrKSB7XG4gICAgICB0aGlzLnRyZWVNb2RlbC5zZXRGb2N1cyhmYWxzZSk7XG4gICAgfVxuICB9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlcykge1xuICAgIHRoaXMudHJlZU1vZGVsLnNldERhdGEoe1xuICAgICAgb3B0aW9uczogY2hhbmdlcy5vcHRpb25zICYmIGNoYW5nZXMub3B0aW9ucy5jdXJyZW50VmFsdWUsXG4gICAgICBub2RlczogY2hhbmdlcy5ub2RlcyAmJiBjaGFuZ2VzLm5vZGVzLmN1cnJlbnRWYWx1ZSxcbiAgICAgIGV2ZW50czogXy5waWNrKHRoaXMsIHRoaXMudHJlZU1vZGVsLmV2ZW50TmFtZXMpXG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==